<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>auth on rudra kar</title>
    <link>https://rudra.dev/tags/auth/</link>
    <description>Recent content in auth on rudra kar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rudra.dev/tags/auth/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Auth0 with a custom user store</title>
      <link>https://rudra.dev/posts/custom_user_store_with_auth0/</link>
      <pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rudra.dev/posts/custom_user_store_with_auth0/</guid>
      <description>Table of Contents   The problem    Ground work    Set up the Database    Auth0 setup      Auth0 actions configuration      Auth0 is an identity management solution for Web, Mobile, and IoT devices. It supports almost all types of authentication mechanisms and eases the complexity of both authentication and authorization. However, like everything else it has it&amp;rsquo;s limits.</description>
    </item>
    
    <item>
      <title>Building a GitHub authentication service</title>
      <link>https://rudra.dev/posts/building-a-github-auth-service/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rudra.dev/posts/building-a-github-auth-service/</guid>
      <description>Table of Contents   The GitHub OAuth process    Why do we need a back-end server    The proxy    Conclusion      Recently I was building a GitHub OAuth app to authentiacate one my client-side application with GitHub. The application was all about taking notes and maintaining them on a private repository. I have had worked on such an architecture in one of my previous jobs where we have used AWS CodeCommit  as an inventory of resources where the history and the changes were easier to maintain.</description>
    </item>
    
  </channel>
</rss>
